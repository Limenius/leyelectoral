{% extends "layout.html" %}
{% block content %}

<style type="text/css" media="screen">
body,html{
  margin:0;
  background-color: #f4f4f4;
  font-family: "Trebuchet MS";
  color: #222;
  text-align: justify;
  color: #292929;
}
h2{
  color: #595959;
}
#header {
  height: 49px;
  background: url('/imgs/header.png') repeat-x;
}
#logo{
  height: 50px;
  background: url('/imgs/logo.png') no-repeat;
}
#wrapper {
  width: 960px;
  margin: 0 auto;
}
#holder {
  float: left;
  margin: -215px 0;
  width: 960px;
  height: 500px;
}
#background{
  background-color: #fbfbfb;
  border-radius: 10px;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;    
  padding-bottom: 5px;
}
#buttons{
  position:fixed;
  bottom:0;
  left:43%;
  width: 160px;
}
#goprev {
  width: 40px;
  height: 40px;
  float: left;
  cursor: pointer;
  background-image: url('imgs/goprev.png');
}
#goprev:hover {
  background-image: url('imgs/goprevhover.png');
}
#gonext {
  width: 40px;
  height: 40px;
  float: left;
  cursor: pointer;
  background-image: url('imgs/gonext.png');
}
#gonext:hover {
  background-image: url('imgs/gonexthover.png');
}
#golast {
  width: 40px;
  height: 40px;
  float: left;
  cursor: pointer;
  background-image: url('imgs/golast.png');
}
#golast:hover {
  background-image: url('imgs/golasthover.png');
}
#gofirst {
  width: 40px;
  height: 40px;
  float: left;
  cursor: pointer;
  background-image: url('imgs/gofirst.png');
}
#gofirst:hover {
  background-image: url('imgs/gofirsthover.png');
}
#notes {
  width: 485px;
  margin-left: 455px;
  height: 270px;
  padding-right: 20px;
  padding-top: 5px;
}
#notes2 {
  width: 420px;
  height: 210px;
  margin-top: -35px;
  margin-left: 20px;
}
#notes3 {
  margin: 0 20px;
}
#reform1 {
  height: 305px;
  width: 420px;
  margin-left: 20px;
}
#reform2 {
  height: 345px;
  width: 420px;
  padding-top: 5px;
  margin-left: 20px;
}
#reform3 {
  height: 365px;
  width: 420px;
  padding-top: 5px;
  margin-left: 20px;
}
#reform4 {
  height: 360px;
  width: 420px;
  padding-top: 5px;
  margin-left: 20px;
}
.reformrules {
  width: 420px;
}

.fullscreen{
  display:block;

  position:absolute;
  top:0;
  left:0;

  width:100%;
  height:100%;

  -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)";
  filter: alpha(opacity=50);
  -moz-opacity:0.5;
  -khtml-opacity: 0.5;
  opacity: 0.5;

  background-color: white;
  z-index: 40;
}

#innerfull{
    margin: 0 auto;
    position: absolute;
    left: 45%;
    top: 45%;
    width: 54px;
    height: 55px;
    z-index: 50;
    -ms-filter:"progid:DXImageTransform.Microsoft.Alpha(Opacity=100)";
    filter: alpha(opacity=100);
    -moz-opacity:1;
    -khtml-opacity: 1;
    opacity: 1;
}


</style>
<div id="header"></div>
<div id="wrapper">
    <div id="logo"></div>
  <div id="holder">
    <div id="background">
      <div id="notes"></div>
      <div id="notes2"></div>
      <div id="notes3"></div>
      <div id="reform1"></div>
      <div id="reform2"></div>
      <div id="reform3"></div>
      <div id="reform4"></div>
      <div id="buttons">
        <div id="gofirst"></div>
        <div id="goprev"></div>
        <div id="gonext"></div>
        <div id="golast"></div>
      </div>
    </div>
  </div>
</div>

{% for key, explanation in explanations %}
<div id="shortcontent-{{key}}" class="shortcontent" style="visibility:hidden;display:none;">{{ explanation | raw }}</div>
{% endfor %}

<script>
$(document).ready(function(){
    {% for provincia, results in votes %}
        DataStore.add({
            provincia : "{{provincia}}",
        });
        var prov = DataStore.detect(function(data){ return data.get('provincia') == '{{provincia}}'; });
        {% for party, result in results %}
            prov.addRow({
                label: "{{parties[party]|raw}}",
                amount: parseInt({{result}}, 10),
                oid: "{{party}}",
                color: "#{{colors[party]}}"
             });
        {% endfor %}
        prov.addRow({
           label:    "total",
           amount:    parseInt({{stats[provincia]['Censo']}}, 10),
           oid:      "total",
           statistical: true
        });
        prov.addRow({
           label:    "invalid",
           amount:    parseInt({{stats[provincia]['VNulos']}}, 10),
           oid:      "invalid",
           statistical: true
        });
        prov.addRow({
           label:    "blank",
           amount:    parseInt({{stats[provincia]['VBlanco']}}, 10),
           oid:      "blank",
           statistical: true
        });
        prov.addRow({
           label:    "nonvote",
           amount:  (parseInt({{stats[provincia]['Censo']}}, 10) - parseInt({{stats[provincia]['VCandidaturas']}}, 10)),
           oid:      "nonvote",
           statistical: true
        });
    {% endfor %}


    $('.shortcontent').each(function(index) {
        ContentStore.add({
            key: $(this).attr('id').replace("shortcontent-", ""),
            value: $(this).html()
        });
    });
    DataStore.trigger("redraw");
    Backbone.history.start();
});

</script>
{% endblock %}
